components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: objectId
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
        auth_type:
          type: string
          enum: [standalone, google]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NTRmNTI0NGM4Njg4Mjk5YTZkMDVlODEiLCJpYXQiOjE2OTk2OTc0ODAsImV4cCI6MTcwMjI4OTQ4MCwidHlwZSI6InJlZnJlc2gifQ.TtP9s9Dg_zf5r6-BxFTsDQv-d3FGohP9WnvxzWAtwjY
        expires: 2023-11-11T12:32:51.927Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"

    UserWithTokens:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        tokens:
          $ref: "#/components/schemas/AuthTokens"

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string


  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Not authorized
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

